substitutions:
  name: seplos-emu
  tx_pin: GPIO1
  rx_pin: GPIO3

esphome:
  name: ${name}

esp8266:
  board: d1_mini

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

api:
ota:
logger:
  baud_rate: 0

uart:
  id: uart0
  baud_rate: 9600
  tx_pin: ${tx_pin}
  rx_pin: ${rx_pin}
  debug:
    direction: BOTH
    dummy_receiver: true
    after:
      delimiter: "\r"
    sequence:
      - lambda: UARTDebug::log_string(direction, bytes);
      - lambda:
          std::string request(bytes.begin(), bytes.end());
          if(request == "~2000464F0000FD9A\r") {
            id(uart0).write_str("~200046000000FDB4\r");
            return;
          }
          if(request == "~200046510000FDAE\r") {
            id(uart0).write_str("~20004600C040313130312D5A4832362002062020202020202020202020202020202020202020F116\r");
            return;
          }
          if(request == "~20004642E00200FD37\r") {
            id(uart0).write_str("~2000460010960001100CD80CE80CF40CD70CEE0CE50CE10CDD0CE90CF00CE80CEF0CEB0CDA0CDE0CD9060BA60BA00B970BA60BA50BA2FD7214A0344A0A426803134650004603E8149F0000000000000000DC7C\r");
            return;
          }
          if(request == "~20004644E00200FD35\r") {
            id(uart0).write_str("~20004600A06000010F000000000000000000000000000000060000000000000000140000000000000300000200000000000000000002EB74\r");
            return;
          }
          ESP_LOGD("Lambda", "Unhandled request %s", request.c_str());
