<<: !include esp32-ble-example-debug.yaml

seplos_bms_ble:
  - ble_client_id: client0
    id: bms0
    update_interval: 10s

interval:
  - interval: 20s
    then:
      # Request settings (0x47): 7e:10:00:46:47:00:01:00:e7:16:0d
      - lambda: |-
          const uint8_t frame[] = {
            0x7e, 0x14, 0x00, 0x47, 0x00, 0x00, 0xa9, 0x00, 0x3c, 0x0e,
            0x38, 0x0d, 0xac, 0x0a, 0x28, 0x0a, 0x8c, 0x0e, 0x42, 0x0e,
            0x06, 0x09, 0xc4, 0x0a, 0x5a, 0x0d, 0x48, 0x05, 0xdc, 0x16,
            0x44, 0x15, 0x4a, 0x10, 0x68, 0x11, 0x30, 0x16, 0xd0, 0x15,
            0x7c, 0x0f, 0xaa, 0x10, 0x04, 0x17, 0x70, 0x17, 0x0c, 0x0c,
            0x9f, 0x0c, 0x81, 0x0a, 0xbf, 0x0a, 0xdd, 0x0c, 0xd1, 0x0c,
            0x9f, 0x0a, 0x47, 0x0a, 0xab, 0x0c, 0xb3, 0x0c, 0x81, 0x0a,
            0x47, 0x0a, 0xc9, 0x0c, 0xd1, 0x0c, 0x9f, 0x0a, 0x15, 0x0a,
            0xab, 0x0a, 0xab, 0x0b, 0x0f, 0x0c, 0x9f, 0x0c, 0x81, 0x0a,
            0xab, 0x0a, 0xc9, 0x0d, 0x03, 0x0c, 0xd1, 0x0a, 0x47, 0x0a,
            0xab, 0x0e, 0x2f, 0x0d, 0xfd, 0x0e, 0x93, 0x0d, 0xfd, 0x4e,
            0x20, 0x4c, 0x2c, 0xaf, 0xec, 0xb0, 0xb4, 0x52, 0x08, 0xad,
            0xf8, 0x8a, 0xd0, 0x07, 0xd0, 0x75, 0xf8, 0x27, 0x10, 0x1b,
            0x32, 0x1e, 0x0b, 0x0a, 0x0a, 0x10, 0x0a, 0x0a, 0x1e, 0x3c,
            0x05, 0x05, 0x01, 0x0a, 0x0a, 0x1e, 0xf0, 0x30, 0x02, 0x01,
            0x60, 0x50, 0x64, 0x09, 0x00, 0x0d, 0x00, 0x08, 0xff, 0xff,
            0xff, 0x3f, 0xbf, 0x9f, 0xaf, 0x1e, 0x31, 0x31, 0x30, 0x31,
            0x2d, 0x53, 0x50, 0x37, 0x36, 0x20, 0x5d, 0x2e, 0x0d
          };
          id(bms0).assemble(frame, sizeof(frame));
      - delay: 1s

      # Request manufacturer info (0x51): 7e:10:00:46:51:00:00:3a:7f:0d
      - lambda: |-
          const uint8_t frame[] = {
            0x7e, 0x14, 0x00, 0x51, 0x00, 0x00, 0x24, 0x43, 0x41, 0x4e,
            0x3a, 0x56, 0x69, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x20, 0x20,
            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x31, 0x31, 0x30,
            0x31, 0x2d, 0x53, 0x50, 0x37, 0x36, 0x20, 0x10, 0x04, 0x03,
            0x01, 0x46, 0x01, 0xf4, 0x26, 0x0d
          };
          id(bms0).assemble(frame, sizeof(frame));
      - delay: 1s

      # Request single BMS data (0x61): 7e:10:00:46:61:00:01:00:f7:c1:0d
      - lambda: |-
          const uint8_t frame[] = {
            0x7e, 0x14, 0x00, 0x61, 0x00, 0x00, 0x6a, 0x00, 0x00, 0x10,
            0x0d, 0x4f, 0x0d, 0x4d, 0x0d, 0x50, 0x0d, 0x52, 0x0d, 0x55,
            0x0d, 0x51, 0x0d, 0x50, 0x0d, 0x54, 0x0d, 0x53, 0x0d, 0x51,
            0x0d, 0x51, 0x0d, 0x51, 0x0d, 0x50, 0x0d, 0x51, 0x0d, 0x51,
            0x0d, 0x4d, 0x06, 0x0b, 0xbf, 0x0b, 0xba, 0x0b, 0xbb, 0x0b,
            0xc3, 0x0b, 0xc4, 0x0b, 0x9f, 0x0a, 0xc4, 0x15, 0x4e, 0x6f,
            0xfb, 0x06, 0x75, 0xf8, 0x03, 0xb5, 0x75, 0xf8, 0x00, 0x06,
            0x03, 0xe8, 0x15, 0x51, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03,
            0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x5e, 0xea, 0x0d
          };
          id(bms0).assemble(frame, sizeof(frame));
      - delay: 1s

      # Request parallel data (0x62): 7e:10:00:46:62:00:00:a6:8a:0d
      - lambda: |-
          const uint8_t frame[] = {
            0x7e, 0x14, 0x00, 0x62, 0x00, 0x00, 0x30, 0x00, 0x00, 0x10,
            0x0d, 0x54, 0x0d, 0x3e, 0x06, 0x0b, 0xc3, 0x0b, 0xa4, 0x0b,
            0xc4, 0x0b, 0x9f, 0x02, 0x3a, 0x15, 0x43, 0x15, 0x94, 0x07,
            0x17, 0x98, 0x03, 0x92, 0x17, 0x98, 0x00, 0x06, 0x03, 0xe8,
            0x15, 0x48, 0x03, 0x00, 0x02, 0x03, 0x08, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x10, 0x0d
          };
          id(bms0).assemble(frame, sizeof(frame));
