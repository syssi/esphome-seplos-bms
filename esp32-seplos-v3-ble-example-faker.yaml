<<: !include esp32-seplos-v3-ble-example-debug.yaml

seplos_bms_v3_ble:
  - ble_client_id: client0
    id: bms0
    update_interval: 10s

interval:
  - interval: 20s
    then:
      # Request EIA (0x2000): Main battery data - voltage, current, cycles, SOC
      - lambda: |-
          const uint8_t frame[] = {
            0x00, 0x04, 0x34, 0x14, 0x72, 0x00, 0x00, 0xff, 0xbd, 0xff, 0xff, 0x34, 0x64, 0x00, 0x00, 0x6d, 0x60, 0x00, 0x00, 0x00, 0xd5,
            0x00, 0x00, 0x6d, 0x60, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x08, 0x00, 0x00, 0x07, 0x08, 0x00,
            0x00, 0x02, 0x40, 0x01, 0xd0, 0x00, 0x02, 0x00, 0x09, 0x01, 0xdf, 0x03, 0xe7, 0xb3, 0x36
          };
          id(bms0).assemble(frame, sizeof(frame));

      - delay: 1s

      # @FIXME: This frame is probably garbage and needs to be replaced
      # Request EIB (0x2100): Temperature and additional data
      - lambda: |-
          const uint8_t frame[] = {
            0x00, 0x04, 0x2c, 0x0c, 0xc9, 0x0c, 0xc6, 0x00, 0x02, 0x00, 0x07, 0x14, 0x72, 0x14, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa,
            0x00, 0xee, 0x00, 0xf4, 0x00, 0x00, 0x00, 0x01, 0x01, 0xdf, 0x01, 0xdf, 0x00, 0x09, 0x03, 0xe7, 0x01, 0x0a, 0x01, 0x0a, 0x01,
            0x0a, 0x00, 0x00, 0x00, 0x00, 0x57, 0x96
          };
          id(bms0).assemble(frame, sizeof(frame));

      - delay: 1s

      # Request EIC (0x2200): Problem codes and status flags
      - lambda: |-
          const uint8_t frame[] = {
            0x00, 0x01, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x7e, 0x35
          };
          id(bms0).assemble(frame, sizeof(frame));

      - delay: 1s

      # Request PIA1 (0x1000): Pack 1 specific data - voltage, current, SOC, cycles
      - lambda: |-
          const uint8_t frame[] = {
            0x01, 0x04, 0x22, 0x14, 0x72, 0xfd, 0x30, 0x34, 0x64, 0x6d, 0x60, 0x00, 0xd5, 0x01, 0xdf, 0x03, 0xe7, 0x00, 0x09, 0x0c, 0xc7,
            0x0b, 0x9f, 0x0c, 0xc8, 0x0c, 0xc6, 0x0b, 0xa5, 0x0b, 0x99, 0x00, 0x00, 0x00, 0xb4, 0x00, 0xb4, 0x6f, 0xf3
          };
          id(bms0).assemble(frame, sizeof(frame));

      - delay: 1s

      # Request PIA2 (0x1000): Pack 2 specific data - voltage, current, SOC, cycles
      - lambda: |-
          const uint8_t frame[] = {
            0x02, 0x04, 0x22, 0x14, 0x73, 0xfd, 0x31, 0x34, 0x64, 0x6d, 0x60, 0x00, 0xd5, 0x01, 0xe0, 0x03, 0xe7, 0x00, 0x0a, 0x0c, 0xc7,
            0x0b, 0x9f, 0x0c, 0xc8, 0x0c, 0xc6, 0x0b, 0xa5, 0x0b, 0x99, 0x00, 0x00, 0x00, 0xb4, 0x00, 0xb4, 0xa6, 0xe2
          };
          id(bms0).assemble(frame, sizeof(frame));

      - delay: 1s

      # Request PIB1 (0x1100): Pack 1 cell voltages and temperatures
      - lambda: |-
          const uint8_t frame[] = {
            0x01, 0x04, 0x34, 0x0c, 0xc8, 0x0c, 0xc8, 0x0c, 0xc8, 0x0c, 0xc7, 0x0c, 0xc7, 0x0c, 0xc7, 0x0c, 0xc7, 0x0c, 0xc6, 0x0c, 0xc6,
            0x0c, 0xc7, 0x0c, 0xc7, 0x0c, 0xc7, 0x0c, 0xc7, 0x0c, 0xc8, 0x0c, 0xc8, 0x0c, 0xc8, 0x0b, 0xa5, 0x0b, 0x99, 0x0b, 0x9a, 0x0b,
            0xa4, 0x0a, 0xab, 0x0a, 0xab, 0x0a, 0xab, 0x0a, 0xab, 0x0b, 0xc4, 0x0b, 0xb5, 0x97, 0x1f
          };
          id(bms0).assemble(frame, sizeof(frame));

      - delay: 1s

      # Request PIB2 (0x1100): Pack 2 cell voltages and temperatures
      - lambda: |-
          const uint8_t frame[] = {
            0x02, 0x04, 0x34, 0x0d, 0xc8, 0x0d, 0xc8, 0x0d, 0xc8, 0x0d, 0xc7, 0x0d, 0xc7, 0x0d, 0xc7, 0x0d, 0xc7, 0x0d, 0xc6, 0x0d, 0xc6,
            0x0d, 0xc7, 0x0d, 0xc7, 0x0d, 0xc7, 0x0d, 0xc7, 0x0d, 0xc8, 0x0d, 0xc8, 0x0d, 0xc9, 0x0b, 0xa5, 0x0b, 0x99, 0x0b, 0x9a, 0x0b,
            0xa4, 0x0a, 0xab, 0x0a, 0xab, 0x0a, 0xab, 0x0a, 0xab, 0x0b, 0xc4, 0x0b, 0xb5, 0x53, 0xf1
          };
          id(bms0).assemble(frame, sizeof(frame));

      - delay: 1s

      # Request PIC1 (0x1240): Pack 1 protection status - system state, voltage/temperature/current events
      # NOTE: This frame is a best guess/synthetic data for testing - not from actual BMS capture
      - lambda: |-
          const uint8_t frame[] = {
            0x01, 0x01, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0x85
          };
          id(bms0).assemble(frame, sizeof(frame));

      - delay: 1s

      # Request PCT (0x1800): Version information - factory name, device name, firmware version, serial numbers
      - lambda: |-
          const uint8_t frame[] = {
            0xe0, 0x04, 0x48, 0x05, 0x00, 0x01, 0xf4, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x6c, 0x75, 0x73, 0x2d, 0x49, 0x49, 0x20, 0x34,
            0x38, 0x2f, 0x33, 0x30, 0x30, 0x30, 0x2f, 0x33, 0x35, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x69, 0x63,
            0x74, 0x72, 0x6f, 0x6e, 0x20, 0x43, 0x61, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x30, 0x00, 0x00, 0x8a, 0x4e
          };
          id(bms0).assemble(frame, sizeof(frame));

      - delay: 1s
